%% Integrate-and-Fire Model
%%transduction model

%%Sinusoids
%% Frequencia [1,5,10,25,60,100]

[sen_1, sen_2] = Senoide (260,5);
% t= 0:0.001:10;
% figure
% plot(t, sen_1 , 'b.-');
% title('posição | tempo');
% xlabel('t [s]');
% ylabel('r1 [10^-6 m]');
% grid on
% 
% figure
% plot(t, sen_2 , 'b.-');
% title('posição (redificado) | tempo');
% xlabel('t [s]');
% ylabel('r2 [10^-6 m]');
% grid on

%%Diharmonic Stimuli

% %%Cada estímulo de ruído foi dimensionado para um conjunto de amplitudes de
% a1 amplitude de baixa frequência[2-125] 
% a2 amplitude de alta frequência [2-100]
% fase [0,pi/2, pi, or 3*pi/2]
% v1 frequência >100 Hz
% v2 frequência 100 e 125 Hz
% x = a1*sin(v1*t) + a2*sin(v2*t + fi); %% com v1<v2
% formato da função diharmonica(a1,a2,f1,f2,fi)
 

t= 0:0.001:10;
[dihar_1,dihar_2]=diharmonica(100,50,90,100,pi);
% figure
% plot(t, dihar_1 , 'b.-');
% title('posição | tempo');
% xlabel('t [s]');
% ylabel('rd1 [10^-6 m]');
% grid on
% 
% figure
% plot(t, dihar_2 , 'b.-');
% title('posição (redificado)| tempo');
% xlabel('t [s]');
% ylabel('rd2 [10^-6 m]');
% grid on

% %% Aceleração
% 
% ra1 retificação 1 da velocidade (positivo)
% ra2 retificação 2 da velocidade (negativo)
% x1menos= a1*sin(v1*(t-h)) + a2*sin(v2*(t-h) + fi); 
% x1mais = a1*sin(v1*(t+h)) + a2*sin(v2*(t+h) + fi); 
% a função aceleração é definida por aceleracao(a1,a2,f1,f2,fi) 
[acel_1,acel_2] = aceleracao(100,50,90,100,pi);
t= 0:0.001:10;
% figure
% plot(t, acel_1, 'b.-');
% title('Componente da Aceleração positiva | tempo');
% xlabel('t [s]');
% ylabel('ra1 [10^-6 m]');
% grid on
% 
% figure
% plot(t, acel_2 , 'b.-');
% title('Componente da Aceleração negativa (redificado)| tempo');
% xlabel('t [s]');
% ylabel('ra2 [10^-6 m]');
% grid on

%% Velocidade 
%% forma da função velocidade(a1,a2,f1,f2,fi)

[velos_1,velos_2]=velocidade(100,50,90,100,pi);
t= 0:0.001:10;
% figure
% plot(t, velos_1 , 'b.-');
% title('Componente da Velocidade positiva | tempo');
% xlabel('t [s]');
% ylabel('rv1 [10^-6 m]');
% grid on
% 
% figure
% plot(t, velos_2 , 'b.-');
% title('Componente da Velocidade negativa (redificado)| tempo');
% xlabel('t [s]');
% ylabel('rv2 [10^-6 m]');
% grid on

% %% Filtragem Passa Faixa
%% Estímulos de ruído bandpass.

%%Cada estímulo de ruído foi dimensionado para um conjunto de amplitudes de rms predeterminadas 0.5, 1, 5, 10 e 50 μm.
Sinal_ruido1 = 0.5*randn(10000,1); %% sinal aleatório
Sinal_ruido2 = randn(10000,1);
Sinal_ruido3 = 5*randn(10000,1);
Sinal_ruido4 = 10*randn(10000,1);
Sinal_ruido5 = 50*randn(10000,1);

% baixa frequência de 5Hz
% alta freqência de 10,25,50 e 100 Hz
%%Fs = 10000; %%frequencia de amostragem 
%%frequência de Nyquist (Fs/2)=5000
PassaFaixa= fir1(100,[0.001 0.002],'bandpass'); %%especifica um filtro de ordem 4. Wn1=5Hz e Wn2=100
% a=1; %%denominador da função de transferência 
Sinal_1_filt = filter(PassaFaixa,1,Sinal_ruido1);
Sinal_2_filt = filter(PassaFaixa,1,Sinal_ruido2);
Sinal_3_filt = filter(PassaFaixa,1,Sinal_ruido3);
Sinal_4_filt = filter(PassaFaixa,1,Sinal_ruido4);
Sinal_5_filt = filter(PassaFaixa,1,Sinal_ruido5);

l=sqrt(mean(Sinal_ruido1.^2));
l_liha=sqrt(mean(Sinal_1_filt.^2));

figure
plot(Sinal_1_filt);
figure
pwelch(Sinal_1_filt,[],[],[]);

% 
% 

% 
% %% weight
% % w1
% % w2
% % w3
% % w4
% % w5
% % w6
%  %% somas ponderadas das componentes dos sinais
% % s = w1*rd1 +w2*rd2 + w3*rv1 + w4*rv2 + w5*ra1 + w6*ra2;
% 
% %% A soma das componentes é filtrada 
% %%
% 
% 
